{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = function () {\n  return [7];\n};\nconst _c1 = function () {\n  return [0];\n};\nconst _c2 = function () {\n  return [1, 1, 2];\n};\nconst _c3 = function () {\n  return [0, 1, 0, 1, 2];\n};\nconst _c4 = function () {\n  return [1, 2, 2, 3, 3, 3, 4, 3, 3, 3, 2, 2, 1];\n};\nconst _c5 = function () {\n  return [\":)\", \";(\", \";}\", \":-D\"];\n};\nexport class AppComponent {\n  findOdd(arr) {\n    let counter = 0;\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr.length; j++) {\n        if (arr[i] === arr[j]) {\n          counter++;\n        }\n      }\n      if (counter < 2) {\n        return arr[i];\n      } else {\n        counter = 0;\n      }\n    }\n    return 'none';\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 29,\n    vars: 12,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h4\");\n        i0.ɵɵtext(1, \"Find the Odd int\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \" Q#1: [7]\");\n        i0.ɵɵelement(4, \"br\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelement(6, \"br\");\n        i0.ɵɵtext(7, \" Q#2: [0]\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵtext(11, \" Q#3: [1,1,2]\");\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵtext(15, \" Q#4: [0,1,0,1,2]\");\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelement(18, \"br\");\n        i0.ɵɵtext(19, \" Q#5: [1,2,2,3,3,3,4,3,3,3,2,2,1]\");\n        i0.ɵɵelement(20, \"br\");\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"h4\");\n        i0.ɵɵtext(23, \"Count the smiley faces\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \" Q#1: [':)', ';(', ';}', ':-D']\");\n        i0.ɵɵelement(26, \"br\");\n        i0.ɵɵtext(27);\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" A#1: \", ctx.findOdd(i0.ɵɵpureFunction0(6, _c0)), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" A#2: \", ctx.findOdd(i0.ɵɵpureFunction0(7, _c1)), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" A#3: \", ctx.findOdd(i0.ɵɵpureFunction0(8, _c2)), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" A#4: \", ctx.findOdd(i0.ɵɵpureFunction0(9, _c3)), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" A#5: \", ctx.findOdd(i0.ɵɵpureFunction0(10, _c4)), \"\\n\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" A#1: \", ctx.countSmileys(i0.ɵɵpureFunction0(11, _c5)), \"\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","findOdd","arr","counter","i","length","j","_","_2","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpureFunction0","_c0","_c1","_c2","_c3","_c4","countSmileys","_c5"],"sources":["/Users/athichoke/Work/coding/situp/src/app/app.component.ts","/Users/athichoke/Work/coding/situp/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  findOdd(arr: number[]) {\n    let counter = 0;\n    for(let i = 0; i < arr.length; i++) {\n      for(let j = 0; j < arr.length; j++) {\n        if(arr[i] === arr[j]) {\n          counter++;\n        }\n      }\n      if(counter < 2) {\n        return arr[i];\n      } else {\n        counter = 0;\n      }\n    }\n    return 'none';\n  }\n\n}\n","<h4>Find the Odd int</h4>\n<p>\n  Q#1: [7]<br>\n  A#1: {{ findOdd([7]) }}<br>\n  Q#2: [0]<br>\n  A#2: {{ findOdd([0]) }}<br>\n  Q#3: [1,1,2]<br>\n  A#3: {{ findOdd([1,1,2]) }}<br>\n  Q#4: [0,1,0,1,2]<br>\n  A#4: {{ findOdd([0,1,0,1,2]) }}<br>\n  Q#5: [1,2,2,3,3,3,4,3,3,3,2,2,1]<br>\n  A#5: {{ findOdd([1,2,2,3,3,3,4,3,3,3,2,2,1]) }}\n</p>\n<h4>Count the smiley faces</h4>\n<p>\n  Q#1: [':)', ';(', ';}', ':-D']<br>\n  A#1: {{ countSmileys([':)', ';(', ';}', ':-D']) }}<br>\n</p>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}